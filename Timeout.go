// Code generated by generate.go; DO NOT EDIT.
// This file was automatically generated by generate.go
// Manual edits will be overwritten on next generation.

package msg

// Pre-serialized JSON representation of "Timeout" error.
// Contains byte array representing JSON structure:
// {
//   "error": {
//     "key": "TIMEOUT",
//     "message": "The request has timed out"
//   }
// }
var errorTimeoutJson = []byte{123, 34, 101, 114, 114, 111, 114, 34, 58, 123, 34, 107, 101, 121, 34, 58, 34, 84, 73, 77, 69, 79, 85, 84, 34, 44, 34, 109, 101, 115, 115, 97, 103, 101, 34, 58, 34, 84, 104, 101, 32, 114, 101, 113, 117, 101, 115, 116, 32, 104, 97, 115, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 34, 125, 125}

// Pre-serialized MessagePack representation of "Timeout" error.
// Binary-optimized format containing the same data as JSON version.
var errorTimeoutMsgpack = []byte{129, 165, 101, 114, 114, 111, 114, 130, 163, 75, 101, 121, 167, 84, 73, 77, 69, 79, 85, 84, 167, 77, 101, 115, 115, 97, 103, 101, 185, 84, 104, 101, 32, 114, 101, 113, 117, 101, 115, 116, 32, 104, 97, 115, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116}

// Timeout sends a pre-serialized error message to the client.
//
// Parameters:
//   - ctx: Request context (compatible with Fiber, Echo, Gin or other frameworks)
//   - format: Optional format parameter ("json" or "msgpack"). Defaults to JSON.
//
// Returns:
//   - error: Returns an error if there were problems sending the message
//
// Behavior:
// - Automatically sets appropriate Content-Type header
// - Supports multiple frameworks through unified interface
// - Uses pre-serialized data for maximum performance
// - Defaults to JSON format if none specified
func Timeout(ctx any, format ...string) error {
    return send(ctx, errorTimeoutJson, errorTimeoutMsgpack, format...)
}
