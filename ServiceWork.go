// Code generated by generate.go; DO NOT EDIT.
// This file was automatically generated by generate.go
// Manual edits will be overwritten on next generation.

package msg

// Pre-serialized JSON representation of "ServiceWork" error.
// Contains byte array representing JSON structure:
// {
//   "error": {
//     "key": "SERVICE_WORK",
//     "message": "Technical work is underway"
//   }
// }
var errorServiceWorkJson = []byte{123, 34, 101, 114, 114, 111, 114, 34, 58, 123, 34, 107, 101, 121, 34, 58, 34, 83, 69, 82, 86, 73, 67, 69, 95, 87, 79, 82, 75, 34, 44, 34, 109, 101, 115, 115, 97, 103, 101, 34, 58, 34, 84, 101, 99, 104, 110, 105, 99, 97, 108, 32, 119, 111, 114, 107, 32, 105, 115, 32, 117, 110, 100, 101, 114, 119, 97, 121, 34, 125, 125}

// Pre-serialized MessagePack representation of "ServiceWork" error.
// Binary-optimized format containing the same data as JSON version.
var errorServiceWorkMsgpack = []byte{129, 165, 101, 114, 114, 111, 114, 130, 163, 75, 101, 121, 172, 83, 69, 82, 86, 73, 67, 69, 95, 87, 79, 82, 75, 167, 77, 101, 115, 115, 97, 103, 101, 186, 84, 101, 99, 104, 110, 105, 99, 97, 108, 32, 119, 111, 114, 107, 32, 105, 115, 32, 117, 110, 100, 101, 114, 119, 97, 121}

// ServiceWork sends a pre-serialized error message to the client.
//
// Parameters:
//   - ctx: Request context (compatible with Fiber, Echo, Gin or other frameworks)
//   - format: Optional format parameter ("json" or "msgpack"). Defaults to JSON.
//
// Returns:
//   - error: Returns an error if there were problems sending the message
//
// Behavior:
// - Automatically sets appropriate Content-Type header
// - Supports multiple frameworks through unified interface
// - Uses pre-serialized data for maximum performance
// - Defaults to JSON format if none specified
func ServiceWork(ctx any, format ...string) error {
    return send(ctx, errorServiceWorkJson, errorServiceWorkMsgpack, format...)
}
